DROP TABLE IF EXISTS curtida;
DROP TABLE IF EXISTS comentario;
DROP TABLE IF EXISTS post;
DROP TABLE IF EXISTS permissao;
DROP TABLE IF EXISTS amizade;
DROP TABLE IF EXISTS pedido_amizade;
DROP TABLE IF EXISTS usuario;



CREATE TABLE usuario (
                         id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                         nome VARCHAR(255) NOT NULL,
                         email VARCHAR(255) NOT NULL,
                         apelido VARCHAR(50),
                         data_nascimento DATE NOT NULL,
                         senha VARCHAR(100) NOT NULL,
                         url_foto_perfil VARCHAR(512) DEFAULT ('https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/Windows_10_Default_Profile_Picture.svg/768px-Windows_10_Default_Profile_Picture.svg.png'),
                         ativo BOOLEAN NOT NULL

);
ALTER TABLE usuario ADD CONSTRAINT pk_usuario PRIMARY KEY (id);
ALTER TABLE usuario ADD CONSTRAINT uk_usuario_email UNIQUE (email);

CREATE TABLE post(
                     id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                     horario timestamp NOT NULL,
                     numero_likes int DEFAULT 0,
                     url_imagem VARCHAR(1000) NOT NULL,
                     legenda VARCHAR(2000) NOT NULL,
                     id_usuario BIGINT NOT NULL,
                     permissao VARCHAR(20) NOT NULL

);
ALTER TABLE post ADD CONSTRAINT pk_post PRIMARY KEY(id);
ALTER TABLE post ADD CONSTRAINT fk_usuario FOREIGN KEY (id_usuario) REFERENCES usuario;
ALTER TABLE post ADD CONSTRAINT chk_permissao CHECK (permissao IN ('PUBLICO', 'PRIVADO'));

CREATE TABLE pedido_amizade (
                                id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                requerente BIGINT NOT NULL,
                                requisitado BIGINT NOT NULL
);

ALTER TABLE pedido_amizade ADD CONSTRAINT pk_pedido_amizade PRIMARY KEY(id);
ALTER TABLE pedido_amizade ADD CONSTRAINT fk_usuario1 FOREIGN KEY (requerente) REFERENCES usuario;
ALTER TABLE pedido_amizade ADD CONSTRAINT fk_usuario2 FOREIGN KEY (requisitado) REFERENCES usuario;



CREATE TABLE amizade (
                         id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                         usuario BIGINT NOT NULL,
                         amigo BIGINT NOT NULL
);

ALTER TABLE amizade ADD CONSTRAINT pk_amizade PRIMARY KEY(id);
ALTER TABLE amizade ADD CONSTRAINT fk_usuario FOREIGN KEY (usuario) REFERENCES usuario;
ALTER TABLE amizade ADD CONSTRAINT fk_amigo FOREIGN KEY (amigo) REFERENCES usuario;

CREATE TABLE permissao (
                           id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                           funcao VARCHAR(100) NOT NULL,
                           usuario_id BIGINT NOT NULL
);
ALTER TABLE permissao ADD CONSTRAINT pk_permissao PRIMARY KEY (id);
ALTER TABLE permissao ADD CONSTRAINT uk_permissao UNIQUE (funcao, usuario_id);
ALTER TABLE permissao ADD CONSTRAINT fk_permissao_usuario FOREIGN KEY (usuario_id) REFERENCES usuario;


CREATE TABLE curtida (
                         id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                         post_id BIGINT NOT NULL,
                         usuario_id BIGINT NOT NULL

);

ALTER TABLE curtida ADD CONSTRAINT pk_curtida PRIMARY KEY (id);
ALTER TABLE curtida ADD CONSTRAINT fk_post_id FOREIGN KEY (post_id) REFERENCES post;
ALTER TABLE curtida ADD CONSTRAINT fk_usuario_id FOREIGN KEY (usuario_id) REFERENCES usuario;


CREATE TABLE comentario (
                            id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                            id_usuario BIGINT NOT NULL,
                            id_post BIGINT NOT NULL,
                            comentario VARCHAR (500) NOT NULL,
                            horario TIMESTAMP NOT NULL
);

ALTER TABLE comentario ADD CONSTRAINT pk_comentario PRIMARY KEY (id);
ALTER TABLE comentario ADD CONSTRAINT fk_id_usuario FOREIGN KEY (id_usuario) REFERENCES usuario;
ALTER TABLE comentario ADD CONSTRAINT fk_id_post FOREIGN KEY (id_post) REFERENCES post;

insert into usuario (nome, email, apelido, data_nascimento, senha, url_foto_perfil, ativo)
values('Jorge', 'jorge@cwi.com', 'jorge', '1997-01-01', '$2a$10$C0yr6Ep749n8W0nJCRwZDuqEJx9Z1l1wRf32TJZeu234uIc4zrR8K', 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/Windows_10_Default_Profile_Picture.svg/768px-Windows_10_Default_Profile_Picture.svg.png', true);
insert into usuario (nome, email, apelido, data_nascimento, senha, url_foto_perfil, ativo)
values('Marcia', 'marcia@cwi.com', 'marcia', '1997-01-01', '$2a$10$C0yr6Ep749n8W0nJCRwZDuqEJx9Z1l1wRf32TJZeu234uIc4zrR8K', 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/Windows_10_Default_Profile_Picture.svg/768px-Windows_10_Default_Profile_Picture.svg.png', true);
insert into usuario (nome, email, apelido, data_nascimento, senha, url_foto_perfil, ativo)
values('Rogerio', 'rogerio@cwi.com', 'rogerio', '1997-01-01', '$2a$10$C0yr6Ep749n8W0nJCRwZDuqEJx9Z1l1wRf32TJZeu234uIc4zrR8K', 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/Windows_10_Default_Profile_Picture.svg/768px-Windows_10_Default_Profile_Picture.svg.png', true);
insert into usuario (nome, email, apelido, data_nascimento, senha, url_foto_perfil, ativo)
values('Silva', 'silva@cwi.com', 'silva', '1997-01-01', '$2a$10$C0yr6Ep749n8W0nJCRwZDuqEJx9Z1l1wRf32TJZeu234uIc4zrR8K', 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/Windows_10_Default_Profile_Picture.svg/768px-Windows_10_Default_Profile_Picture.svg.png', true);
insert into usuario (nome, email, apelido, data_nascimento, senha, url_foto_perfil, ativo)
values('Kleber', 'kleber@cwi.com', 'kleber', '1997-01-01', '$2a$10$C0yr6Ep749n8W0nJCRwZDuqEJx9Z1l1wRf32TJZeu234uIc4zrR8K', 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/Windows_10_Default_Profile_Picture.svg/768px-Windows_10_Default_Profile_Picture.svg.png', true);
